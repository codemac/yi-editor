name:           yi
version:        0.4
category:       Editor
synopsis:       The Haskell-Scriptable Editor
description:
  Yi is a text editor written and extensible in Haskell. The goal of Yi is
  to provide a flexible, powerful, and correct editor for haskell hacking.
license:        GPL
license-file:   LICENSE
author:         AUTHORS
maintainer:     yi-devel@googlegroups.com
homepage:       http://haskell.org/haskellwiki/Yi

cabal-Version:  >= 1.2.3.0
tested-with:    GHC==6.8.2
build-type:     Simple
data-files:
  art/yi+lambda-fat.pdf
  art/yi+lambda-fat.32.png
  art/dependencies.png
  art/plain-folder.png
  art/hs-source-folder.png
  art/exposed-module.png
  art/hidden-module.png
  art/exposed-file-module.png
  art/hidden-file-module.png
  art/package.png
  art/project.png
  art/c-source.png
  art/h-source.png
  art/text-file.png
  art/license-file.png
  art/setup-script.png
  art/setup-script.png
extra-source-files: Yi/Syntax/alex.hsinc

flag shim
  Description: Bake in shim support
  -- Can be useful to disable; ghc package is usually not available for profiling.
  -- TODO: rename this to "GHC API"

flag vty
  Description: Provide Vty UI

flag gtk
  Description: Provide GTK UI

-- Cocoa UI is experimental (and at the moment probably even broken)
-- It seems that it suffers from bugs in HOC
flag cocoa
  Description: Provide experimental Cocoa UI

flag hacking
  Default: False
  Description:
     Hacking mode:
        * Create HackerMain.hs by copying your ~/.yi/yi.hs
        * Skip most library compilation
        * You can run yi in-place with dist/build/yi/yi

flag testing
  Description: bake-in the self-checks

library
  if flag(hacking)
    exposed-modules:
           Yi.Accessor
           -- the most insignificant module (with no dep) I can find.
  else
    exposed-modules:
           Yi
           Yi.Prelude
           Yi.Yi
           Yi.Keymap.Emacs
           Yi.Keymap.Vim
           Yi.Keymap.Users.Ertai
           Yi.Keymap.Users.JP
           Yi.Modes
           Yi.Mode.Haskell
           Yi.Buffer
           Yi.UI.Common
    extensions:     CPP, Rank2Types
    include-dirs:   Yi/Syntax
    if flag (vty)
       build-depends: vty>=3.0.0
       cpp-options: -DFRONTEND_VTY
       exposed-modules: Yi.UI.Vty
       
    hs-source-dirs: . dist/build/autogen

    if flag (gtk)
      build-depends: gtk>=0.9.12 && < 0.9.12.2
      cpp-options: -DFRONTEND_GTK
      exposed-modules: Yi.UI.Gtk
      other-modules: Yi.UI.Gtk.ProjectTree
                     Yi.UI.Gtk.Utils

    if flag (cocoa)
      build-depends: HOC, HOC-AppKit, HOC-Foundation
      cpp-options: -DFRONTEND_COCOA
      exposed-modules: Yi.UI.Cocoa

    if flag (shim)
      build-depends: ghc
      build-depends: parallel
      build-depends: haskell98

      cpp-options: -DSHIM

      exposed-modules:  Yi.Mode.Shim
      other-modules: Shim.SHM, Shim.Utils, Shim.SessionMonad, Shim.Hsinfo, Shim.GhcCompat, Shim.ExprSearch, Shim.ProjectContent

    other-modules:
        Data.DelayList
        Paths_yi,
        Yi.Syntax.Cplusplus, Yi.Syntax.Haskell, Yi.Syntax.Indent, Yi.Syntax.LiterateHaskell,
        Yi.Syntax.Latex, Yi.Syntax.Paren, Yi.Syntax.Srmc, Yi.Syntax.Cabal, Yi.Syntax.Fractal

        Yi.Accessor, Yi.Interpreter,
        Yi.Buffer.HighLevel, Yi.Buffer.Implementation,
        Yi.Buffer.Normal, Yi.Buffer.Region, Yi.Char, Yi.Completion, Yi.Core,
        Yi.Debug, Yi.Dired, Yi.Dynamic, Yi.Editor, Yi.Eval, Yi.Event, Yi.FingerString, Yi.History,
        Yi.Indent, Yi.Interact, Yi.Keymap, Yi.Keymap.Completion,
        Yi.Keymap.Emacs.Keys, Yi.Keymap.Emacs.KillRing, Yi.Keymap.Emacs.UnivArgument,
        Yi.Keymap.Emacs.Utils, Yi.Main, Yi.MkTemp, Yi.Monad, Yi.Process,
        Yi.Search, Yi.String, Yi.Style, Yi.Syntax, Yi.Templates, Yi.TextCompletion,
        Yi.Undo, Yi.Window, Yi.WindowSet
        Yi.MiniBuffer
        Yi.File
        Yi.KillRing
        Yi.Syntax.Alex
        Yi.IncrementalParse
        HConf
        -- Should probably be split out to another package.
        Data.Digest.SHA1
        Data.Tree.Zipper

--         Broken:
--                Yi.Keymap.Ee,
--                Yi.Keymap.Gwern,
--                Yi.Keymap.Joe,
--                Yi.Keymap.Mg,
--                Yi.Keymap.Nano,
--                Yi.Keymap.Vi,

--  extensions:   CPP, DeriveDataTypeable, FlexibleContexts, FlexibleInstances,
--                ForeignFunctionInterface, FunctionalDependencies, GADTs,
--                GeneralizedNewtypeDeriving, MagicHash, MultiParamTypeClasses,
--                ParallelListComp, PatternGuards, PatternSignatures, Rank2Types,
--                ScopedTypeVariables TypeSynonymInstances, UndecidableInstances

executable yi
        build-depends: Cabal==1.2.3.0
        build-depends: array,  base,  containers,  directory,  filepath>=1.0,
                       mtl, process, old-locale, old-time, random

        build-tools:   alex >= 2.0.1 && < 3
        -- haddock >= 2.0,
        -- it seems harsh to require haddock 2.0 to even configure Yi
        build-depends: bytestring ==0.9.0.1
                               -- >= 0.9 && < 0.9.0.4
        build-depends: fingertree
        build-depends: utf8-string

        build-depends: Crypto==4.1.0
        build-depends: regex-base ==0.72.0.1
        build-depends: regex-compat ==0.71.0.1
        build-depends: regex-posix ==0.72.0.2
        build-depends: parsec==2.1.0.0

        ghc-options:   -Wall -optl-Wl,-s -threaded
-- ghc-options later on get appended to the original
        ghc-prof-options:   -prof -auto-all

        if !os(mingw32)
           build-depends: unix

        if flag (vty)
           build-depends: vty>=3.0.0
           cpp-options: -DFRONTEND_VTY

        if flag (gtk)
          build-depends: gtk>=0.9.12 && < 0.9.12.2
          cpp-options: -DFRONTEND_GTK

        if flag (cocoa)
          build-depends: HOC, HOC-AppKit, HOC-Foundation
          cpp-options: -DFRONTEND_COCOA

        if flag (shim)
          build-depends: ghc
          build-depends: parallel
          build-depends: haskell98
          cpp-options: -DSHIM

        if !(flag(vty) || flag (gtk) || flag(cocoa))
         buildable: False

        if flag(hacking)
          main-is:        HackerMain.hs
        else
          main-is:        Main.hs
        other-modules:  Yi.Syntax.Cplusplus, Yi.Syntax.Haskell, Yi.Syntax.LiterateHaskell,
                        Yi.Syntax.Latex, Yi.Syntax.Srmc, Yi.Syntax.Cabal
        include-dirs:   Yi/Syntax
        extensions:     CPP

        if flag(testing)
            cpp-options:    -DTESTING
            hs-source-dirs: . tests/
            other-modules:  Driver, TestSuite
            build-depends:  QuickCheck < 2
