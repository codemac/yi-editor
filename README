
Yi -- the Haskell extensible editor

<http://haskell.org/haskellwiki/Yi>

report bugs at: http://code.google.com/p/yi-editor/issues/list

------------------------------------------------------------------------



DEPENDENCIES

* Cabal, latest darcs repo version.
        http://darcs.haskell.org/cabal

* ghc 6.8.2

* Alex (the haskell lexer generator) 
	http://www.haskell.org/alex/

* for vty frontend
  * latest darcs repo version. 
        http://members.cox.net/stefanor/vty

* for gtk frontend, gtk2hs 0.9.12.
        http://haskell.org/gtk2hs/download/

* for cocoa frontend
  * latest SVN repo version of HOC:
        # First you need to install libffi (unless you have leopard)
        svn co http://hoc.googlecode.com/svn/trunk/libffi
        cd libffi/src
        ../configure --prefix=/usr/local CFLAGS=-DMACOSX
        make
        sudo make install
        
        # Then you install the latest hoc version
        svn co http://hoc.googlecode.com/svn/trunk/hoc
        cd hoc
        runhaskell Setup configure --prefix=/usr/local
        runhaskell Setup build
        sudo runhaskell Setup install
        cd Bindings
        sudo bash make-bindings-macos.sh --prefix=/usr/local

* many packages shipped with GHC or found on hackage.
  see the cabal file for complete list.


QUICK START:

* configure, compile and install yi as you would do for any other Cabal package.

  NOTE: if you get 

    Setup.hs: Package yi-0.4 can't be built on this system.

  it means that you have no UI package available. See DEPENDENCIES.

* copy examples/YiConfig.hs to ~/.yi/ and tailor to your needs

* run yi

  $(install-prefix)/yi

run

  yi --help

for a list of options.

QUICK START with cabal-make:

* To use the Makefile you need a working config.mk file you can
  obtain this in one of two ways:
  1 - copy config.sample to config.mk and edit as required
  2 - runhaskell MkConfig.hs --help
      this will show you the options available re-run with the
      appropriate options, you probably at least want:
      runhaskell MkConfig.hs --prefix <path-to-prefix> --user username
      This will produce a config.test copy this across to config.mk

* make all
  will configure, build, document and install.


CONFIGURATION

All configuration (bindings, colours) is done with ~/.yi/yi.hs
See examples directory for files that you can use as ~/.yi/yi.hs



COMPATIBILITY

        |  Vty     Gtk   Cocoa
--------+----------------------
Linux   |   X       X
OSX     |   X       X      X
Windows |           X



Notes:

  * Vty library has small problems with various terminals. Some keys
    might not be well recognized. 

  * Reconfiguration does not work on windows. You'll have to compile your
    customized Yi yourself.

  * Cocoa frontend is still experimental.
  

HACKER'S GUIDE: 

You can run yi in place without installing with the usual
./dist/build/yi/yi
but this will not work with your ~/.yi/yi.hs file.

To use your own yi.hs file in place copy it across to yi/HackerMain.hs and
then configure yi to run in hacker mode. So assuming you are in the yi top level
directory (ie ls shows yi.cabal):
$ cp ~/.yi/yi.hs HackerMain.hs
$ runhaskell Setup.hs configure -f hacking
$ runhaskell Setup.hs build
$ ./dist/build/yi/yi

Though obviously the configure command should also include your usual
cabal flags which may well include "--user" and "--prefix".

This is the recommended mode of operation if you're tracking the
development repository.

NOTE: You must still install Yi once so that the icons can be found!


PORTABILITY

A porting checklist:
        * you have latest GHC release
        * you have either gtk or vty support
