
Yi -- the Haskell extensible editor

<http://haskell.org/haskellwiki/Yi>

report bugs at: http://code.google.com/p/yi-editor/issues/list

------------------------------------------------------------------------



DEPENDENCIES

* ghc 6.8.2 or above

* many packages shipped with GHC (filepath, ...)
  see the cabal file for complete list.

* Alex (the haskell lexer generator) 
	http://www.haskell.org/alex/

* for vty frontend
  * latest darcs repo version. 
        http://members.cox.net/stefanor/vty

* for gtk frontend, gtk2hs 0.9.12.
        http://haskell.org/gtk2hs/download/


QUICK START:

* configure, compile and install yi as you would do for any other Cabal package

* copy examples/YiConfig.hs to ~/.yi/ and taylor to your needs

* run yi

  $(install-prefix)/yi

run

  yi --help

for a list of options.

QUICK START with cabal-make:

* To use the Makefile you need a working config.mk file you can
  obtain this in one of two ways:
  1 - copy config.sample to config.mk and edit as required
  2 - runhaskell MkConfig.hs --help
      this will show you the options available re-run with the
      appropriate options, you probably at least want:
      runhaskells MkConfig.hs --prefix <path-to-prefix> --user username
      This will produce a config.test copy this across to config.mk

* make all
  will configure, build, document and install.

HACKER'S GUIDE: 

You can run Yi "in place" by running:

make run-inplace

You can then try your changes dynamically by running the "reconfigE" command. (M-x
reconfigE in emacs mode)


CONFIGURATION

All configuration (bindings, colours) is done with ~/.yi/YiConfig.hs
See examples directory for files that you can use as ~/.yi/YiConfig.hs.
Drop the --as=... when you have defined your YiConfig.hs



PORTABILITY

Yi is developed on Linux, and should be easily ported to FreeBSD and
OpenBSD. Running Gtk fronted to MS Windows should be possible.
Vty frontend should work on OSX.

A porting checklist:
        * you have a working GHCi
        * you have either gtk or vty support


